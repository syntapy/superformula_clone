#!/bin/sh

print_help() {
    cat <<EOF
Usage: $0 [OPTION]
Run Gatsby container commands with Docker Compose.

Options:
  -c    Run bash CLI (default behavior)
  -d    Start development server
  -b    Build project
  -s    Serve production build
  -a    Run CI version of command
  -I    Install npm pkgs
          'npm install' for normal case
          'npm ci' if '-a' included
  -h    Show this help message
EOF
}

# Default values
COMMAND="bash"
ENTRYPOINT_BASH="--entrypoint bash"
ENTRYPOINT_NPM="--entrypoint npm"
SERVICE="gatsby"
INSTALL=0
UP=0
ACTIONS=0
FLAG_SET=0

# Parse command-line options
while getopts "cdbsh" opt; do
    case $opt in
        c)
            COMMAND=""
            ENTRYPOINT=$ENTRYPOINT_BASH
            ((FLAG_SET++))
            ;;
        d)
            COMMAND="'run develop'"
            UP=1
            ((FLAG_SET++))
            ;;
        b)
            COMMAND="run build"
            ENTRYPOINT=$ENTRYPOINT_NPM
            ((FLAG_SET++))
            ;;
        s)
            COMMAND="run serve"
            UP=1
            ((FLAG_SET++))
            ;;
        a)
            ACTIONS=1
            ;;
        I)
            INSTALL=1
            ;;
        h)
            print_help
            exit 0
            ;;
        *)
            print_help
            exit 1
            ;;
    esac
done

# Handle multiple flags or no flags
if [ $FLAG_SET -gt 1 ]; then
    echo "Error: Cannot specify multiple flags" >&2
    print_help
    exit 1
fi

# Handle default case (no flags = -c)
if [ $FLAG_SET -eq 0 ]; then
    COMMAND=""
    ENTRYPOINT="--entrypoint bash"
fi

## Execute Docker command
if [ $ACTIONS -gt 0 ]; then
    BASE_CMD="docker compose -f docker-compose.yml -f docker-compose.actions.yml"
else
    BASE_CMD="docker compose"
fi

if [ $UP -gt 0 ]; then
  CMD="$BASE_CMD up --wait $SERVICE"
else
  CMD="$BASE_CMD run -P --rm $ENTRYPOINT $SERVICE $COMMAND"
fi

echo "Running: " $CMD
$CMD
